security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    # define the algorythm used to hash the password
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # define the class used to login
    providers:
        users:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            # activate the login page as page to authenticate
            form_login:
                login_path: login
                check_path: login
                success_handler: 'security.authentication.success_handler'

            # activate the logout page as page to logout
            logout:
                path: logout
                target: "%logout_success_target%"
                success_handler: 'security.logout.success_handler'

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
